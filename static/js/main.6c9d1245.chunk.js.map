{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","getButtonWith","action","good","setState","filter","el","this","className","length","join","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAe,CACbC,MAAOH,EACPI,cAAe,CAAC,QAHpB,EAMEC,cAAgB,SAACC,EAAgBC,GAC3BA,GAAmB,WAAXD,EACV,EAAKE,UAAS,SAACN,GAAD,MAAY,CAAEE,cAAc,GAAD,mBAAMF,EAAME,eAAZ,CAA2BG,QAC3DA,GAAmB,WAAXD,EACjB,EAAKE,UAAS,SAACN,GAAD,MAAY,CAAEE,cAAeF,EAAME,cAAcK,QAAO,SAAAC,GAAE,OAAIA,IAAOH,SAEnF,EAAKC,SAAS,CAAEJ,cAAe,MAZrC,4CAgBE,WAAU,IAAD,OACP,EAAiCO,KAAKT,MAA9BE,EAAR,EAAQA,cAAeD,EAAvB,EAAuBA,MAEvB,OACE,sBAAKS,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,SACGR,EAAcS,OAAS,EACpB,UAAGT,EAAcU,KAAK,MAAtB,YAA+BV,EAAcS,OAAS,EAAI,MAAQ,MAChE,YACF,sBAGoB,IAAzBT,EAAcS,QAEX,wBACEE,KAAK,SACLH,UAAU,qBACVI,QAAS,WACP,EAAKX,cAAc,aAJvB,uBAWJ,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,YAAd,SACGR,EAAca,KAAI,SAAAV,GAAI,OACrB,oBAAIK,UAAU,YAAd,SACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,SAA8BL,IAC7BH,EAAcc,SAASX,IAEpB,wBACEQ,KAAK,SACLH,UAAU,SACVI,QAAS,WACP,EAAKX,cAAc,SAAUE,IAJjC,wBALuBA,QAoBnC,oBAAIK,UAAU,YAAd,SACGT,EAAMc,KAAI,SAACV,GAAD,OACT,oBAAeK,UAAU,YAAzB,SACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,SAA8BL,KAC5BH,EAAcc,SAASX,IAErB,wBACEQ,KAAK,SACLH,UAAU,SACVI,QAAS,WACP,EAAKX,cAAc,SAAUE,IAJjC,wBALCA,kBAlEvB,GAAyBY,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6c9d1245.chunk.js","sourcesContent":["/* eslint-disable react/jsx-wrap-multilines */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[],\n  selectedGoods: string[]\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    selectedGoods: ['Jam'],\n  };\n\n  getButtonWith = (action: string, good?: string) => {\n    if (good && action === 'select') {\n      this.setState((state) => ({ selectedGoods: [...state.selectedGoods, good] }));\n    } else if (good && action === 'remove') {\n      this.setState((state) => ({ selectedGoods: state.selectedGoods.filter(el => el !== good) }));\n    } else {\n      this.setState({ selectedGoods: [] });\n    }\n  };\n\n  render() {\n    const { selectedGoods, goods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"title\">\n          {selectedGoods.length > 0\n            ? `${selectedGoods.join(', ')} ${selectedGoods.length > 1 ? 'are' : 'is'}`\n              + ' selected'\n            : 'No goods selected'}\n        </h1>\n\n        {selectedGoods.length !== 0\n          && (\n            <button\n              type=\"button\"\n              className=\"button button--big\"\n              onClick={() => {\n                this.getButtonWith('ClearAll');\n              }}\n            >\n              Clear All\n            </button>\n          )}\n\n        <div className=\"wrapper\">\n          <ul className=\"app__list\">\n            {selectedGoods.map(good => (\n              <li className=\"app__item\" key={good}>\n                <div className=\"sheet\">\n                  <div className=\"sheet__good\">{good}</div>\n                  {selectedGoods.includes(good)\n                    && (\n                      <button\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => {\n                          this.getButtonWith('remove', good);\n                        }}\n                      >\n                        remove\n                      </button>\n                    )}\n                </div>\n              </li>\n            ))}\n          </ul>\n\n          <ul className=\"app__list\">\n            {goods.map((good) => (\n              <li key={good} className=\"app__item\">\n                <div className=\"sheet\">\n                  <div className=\"sheet__good\">{good}</div>\n                  {!selectedGoods.includes(good)\n                    && (\n                      <button\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => {\n                          this.getButtonWith('select', good);\n                        }}\n                      >\n                        select\n                      </button>\n                    )}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}