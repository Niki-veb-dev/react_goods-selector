{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","getButtonWith","text","setState","className","type","onClick","this","length","map","good","includes","filter","el","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,4MACEC,MAAQ,CACNC,MAAOH,EACPI,cAAe,CAAC,QAHpB,EAMEC,cAAgB,SAACC,EAAcC,GAC7B,OACE,wBACEC,UAAU,SACVC,KAAK,SACLC,QAAS,WACP,EAAKH,SAAS,CAAEH,cAAeG,KAJnC,SAOGD,KAfT,4CAoBE,WAA2B,IAAD,OACxB,EAAiCK,KAAKT,MAA9BE,EAAR,EAAQA,cAAeD,EAAvB,EAAuBA,MAEvB,OACE,sBAAKK,UAAU,MAAf,UACE,qBAAIA,UAAU,QAAd,UAC4B,IAAzBJ,EAAcQ,QAAgBD,KAAKN,cAAc,YAAa,IAC9DD,EAAcQ,OAAS,EAAvB,UACMR,EAAcA,EAAcQ,OAAS,GAD3C,aAEG,uBAEN,oBAAIJ,UAAU,YAAd,SACGJ,EAAcS,KAAI,SAAAC,GAAI,OACrB,oBAAIN,UAAU,YAAd,SACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,SAA8BM,IAC7BV,EAAcW,SAASD,IAAS,EAAKT,cAAc,IAAKD,EAAcY,QAAO,SAAAC,GAAE,OAAIA,IAAOH,UAHhEA,QASnC,oBAAIN,UAAU,YAAd,SACGL,EAAMU,KAAI,SAACC,GAAD,OACT,oBAAeN,UAAU,YAAzB,SACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,SAA8BM,KAC5BV,EAAcW,SAASD,IAAS,EAAKT,cAAc,SAAnB,sBAAiCD,GAAjC,CAAgDU,SAH7EA,eA5CrB,GAAyBI,IAAMC,WCb/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4b7fa378.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    selectedGoods: ['Jam'],\n  };\n\n  getButtonWith = (text: string, setState: string[]) => {\n    return (\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => {\n          this.setState({ selectedGoods: setState });\n        }}\n      >\n        {text}\n      </button>\n    );\n  };\n\n  render(): React.ReactNode {\n    const { selectedGoods, goods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"title\">\n          {selectedGoods.length !== 0 && this.getButtonWith('Clear all', [])}\n          {selectedGoods.length > 0\n            ? `${selectedGoods[selectedGoods.length - 1]} selected`\n            : 'No goods selected'}\n        </h1>\n        <ul className=\"app__list\">\n          {selectedGoods.map(good => (\n            <li className=\"app__item\" key={good}>\n              <div className=\"sheet\">\n                <div className=\"sheet__good\">{good}</div>\n                {selectedGoods.includes(good) && this.getButtonWith('X', selectedGoods.filter(el => el !== good))}\n              </div>\n            </li>\n          ))}\n        </ul>\n\n        <ul className=\"app__list\">\n          {goods.map((good) => (\n            <li key={good} className=\"app__item\">\n              <div className=\"sheet\">\n                <div className=\"sheet__good\">{good}</div>\n                {!selectedGoods.includes(good) && this.getButtonWith('select', [...selectedGoods, good])}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}